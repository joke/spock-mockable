plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
}

def spock2x = [
        'spock20groovy25', 'spock20groovy30',
        'spock21groovy25', 'spock21groovy30',
        'spock22groovy25', 'spock22groovy30', 'spock22groovy40',
        'spock23groovy25', 'spock23groovy30', 'spock23groovy40'
]

[*spock2x].forEach {
    sourceSets.create(it) {
        java.srcDirs += sourceSets.main.java.srcDirs
        groovy.srcDirs += sourceSets.test.groovy.srcDirs
    }
}

dependencies {
    testImplementation enforcedPlatform(project(':dependencies'))
    testImplementation enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
    testImplementation enforcedPlatform('org.spockframework:spock-bom:2.3-groovy-4.0')
    testImplementation project(path: ':spock-mockable', configuration: 'shadow')
    testImplementation 'net.bytebuddy:byte-buddy'
    testImplementation 'org.objenesis:objenesis'
    testImplementation 'org.slf4j:slf4j-simple'
    testImplementation 'org.spockframework:spock-core'
//    testImplementation 'org.jacoco:org.jacoco.agent:0.8.8:runtime'

    spock20groovy25Implementation enforcedPlatform(project(':dependencies'))
    spock20groovy25Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.19')
    spock20groovy25Implementation enforcedPlatform('org.spockframework:spock-bom:2.0-groovy-2.5')
    spock20groovy25Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock20groovy25Implementation 'net.bytebuddy:byte-buddy'
    spock20groovy25Implementation 'org.objenesis:objenesis'
    spock20groovy25Implementation 'org.slf4j:slf4j-simple'
    spock20groovy25Implementation 'org.spockframework:spock-core'

    spock20groovy30Implementation enforcedPlatform(project(':dependencies'))
    spock20groovy30Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.19')
    spock20groovy30Implementation enforcedPlatform('org.spockframework:spock-bom:2.0-groovy-3.0')
    spock20groovy30Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock20groovy30Implementation 'net.bytebuddy:byte-buddy'
    spock20groovy30Implementation 'org.objenesis:objenesis'
    spock20groovy30Implementation 'org.slf4j:slf4j-simple'
    spock20groovy30Implementation 'org.spockframework:spock-core'

    spock21groovy25Implementation enforcedPlatform(project(':dependencies'))
    spock21groovy25Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
    spock21groovy25Implementation enforcedPlatform('org.spockframework:spock-bom:2.1-groovy-2.5')
    spock21groovy25Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock21groovy25Implementation 'net.bytebuddy:byte-buddy'
    spock21groovy25Implementation 'org.objenesis:objenesis'
    spock21groovy25Implementation 'org.slf4j:slf4j-simple'
    spock21groovy25Implementation 'org.spockframework:spock-core'

    spock21groovy30Implementation enforcedPlatform(project(':dependencies'))
    spock21groovy30Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
    spock21groovy30Implementation enforcedPlatform('org.spockframework:spock-bom:2.1-groovy-3.0')
    spock21groovy30Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock21groovy30Implementation 'net.bytebuddy:byte-buddy'
    spock21groovy30Implementation 'org.objenesis:objenesis'
    spock21groovy30Implementation 'org.slf4j:slf4j-simple'
    spock21groovy30Implementation 'org.spockframework:spock-core'

    spock22groovy25Implementation enforcedPlatform(project(':dependencies'))
    spock22groovy25Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
    spock22groovy25Implementation enforcedPlatform('org.spockframework:spock-bom:2.2-groovy-2.5')
    spock22groovy25Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock22groovy25Implementation 'net.bytebuddy:byte-buddy'
    spock22groovy25Implementation 'org.objenesis:objenesis'
    spock22groovy25Implementation 'org.slf4j:slf4j-simple'
    spock22groovy25Implementation 'org.spockframework:spock-core'

    spock22groovy30Implementation enforcedPlatform(project(':dependencies'))
    spock22groovy30Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
    spock22groovy30Implementation enforcedPlatform('org.spockframework:spock-bom:2.2-groovy-3.0')
    spock22groovy30Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock22groovy30Implementation 'net.bytebuddy:byte-buddy'
    spock22groovy30Implementation 'org.objenesis:objenesis'
    spock22groovy30Implementation 'org.slf4j:slf4j-simple'
    spock22groovy30Implementation 'org.spockframework:spock-core'

    spock22groovy40Implementation enforcedPlatform(project(':dependencies'))
    spock22groovy40Implementation enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
    spock22groovy40Implementation enforcedPlatform('org.spockframework:spock-bom:2.2-groovy-4.0')
    spock22groovy40Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock22groovy40Implementation 'net.bytebuddy:byte-buddy'
    spock22groovy40Implementation 'org.objenesis:objenesis'
    spock22groovy40Implementation 'org.slf4j:slf4j-simple'
    spock22groovy40Implementation 'org.spockframework:spock-core'

    spock23groovy25Implementation enforcedPlatform(project(':dependencies'))
    spock23groovy25Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
    spock23groovy25Implementation enforcedPlatform('org.spockframework:spock-bom:2.3-groovy-2.5')
    spock23groovy25Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock23groovy25Implementation 'net.bytebuddy:byte-buddy'
    spock23groovy25Implementation 'org.objenesis:objenesis'
    spock23groovy25Implementation 'org.slf4j:slf4j-simple'
    spock23groovy25Implementation 'org.spockframework:spock-core'

    spock23groovy30Implementation enforcedPlatform(project(':dependencies'))
    spock23groovy30Implementation enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
    spock23groovy30Implementation enforcedPlatform('org.spockframework:spock-bom:2.3-groovy-3.0')
    spock23groovy30Implementation project(path: ':spock-mockable', configuration: 'shadow')
    spock23groovy30Implementation 'net.bytebuddy:byte-buddy'
    spock23groovy30Implementation 'org.objenesis:objenesis'
    spock23groovy30Implementation 'org.slf4j:slf4j-simple'
    spock23groovy30Implementation 'org.spockframework:spock-core'

    spock23groovy40Implementation enforcedPlatform(project(':dependencies'))
    spock23groovy40Implementation enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
    spock23groovy40Implementation enforcedPlatform('org.spockframework:spock-bom:2.3-groovy-4.0')
    spock23groovy40Implementation project(path: ':spock-mockable')
    spock23groovy40Implementation 'net.bytebuddy:byte-buddy'
    spock23groovy40Implementation 'org.objenesis:objenesis'
    spock23groovy40Implementation 'org.slf4j:slf4j-simple'
    spock23groovy40Implementation 'org.spockframework:spock-core'
}

spock2x.forEach { source ->
    tasks.create("test$source", Test) {
        group = 'verification'
        check.dependsOn it

        forkEvery 1
        useJUnitPlatform()
        classpath = sourceSets.findByName(source).runtimeClasspath
        testClassesDirs = sourceSets.findByName(source).output.classesDirs
        jvmArgs([
                "-javaagent:${classpath.find { it.name.contains('spock-mockable') }.absolutePath}",
//            '-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5006,suspend=y',
        ])
    }
}

tasks.withType(GroovyCompile) {
//    groovyOptions.fork = true
//    groovyOptions.forkOptions.jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=n,address=5005,suspend=y']
}

test {
    finalizedBy jacocoTestReport

    useJUnitPlatform()
    jacoco {
        enabled = false
        includes = ['io.github.joke.spockmockable.agent.**',
                    'io.github.joke.spockmockable.hooks.**']
        includeNoLocationClasses = true
        dumpOnExit = true
        classDumpDir = layout.buildDirectory.dir('jacoco/dumps').get().asFile
    }
    jvmArgs([
            "${jacoco.asJvmArg}",
            "-javaagent:${classpath.find { it.name.contains('spock-mockable') }.absolutePath}",
//            '-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5006,suspend=y',
    ])
}

jacocoTestReport {
    dependsOn test
    classDirectories.setFrom([])
    additionalSourceDirs project(':spock-mockable').sourceSets.main.java.sourceDirectories.singleFile
    additionalClassDirs layout.buildDirectory.dir('jacoco/dumps').get().asFile
}
