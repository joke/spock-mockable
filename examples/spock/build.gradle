plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'jvm-test-suite'
}

def testSources = {
    java.srcDirs = ['src/main/java']
    groovy.srcDirs = ['src/test/groovy']
}
testing {
    suites {

        test {
            useSpock('2.3-groovy-4.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock20groovy25(JvmTestSuite) {
            useSpock('2.0-groovy-2.5')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock20groovy30(JvmTestSuite) {
            useSpock('2.0-groovy-3.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock21groovy25(JvmTestSuite) {
            useSpock('2.1-groovy-2.5')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock21groovy30(JvmTestSuite) {
            useSpock('2.1-groovy-3.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock22groovy25(JvmTestSuite) {
            useSpock('2.2-groovy-2.5')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock22groovy30(JvmTestSuite) {
            useSpock('2.2-groovy-3.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock22groovy40(JvmTestSuite) {
            useSpock('2.2-groovy-4.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock23groovy25(JvmTestSuite) {
            useSpock('2.3-groovy-2.5')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:2.5.18')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock23groovy30(JvmTestSuite) {
            useSpock('2.3-groovy-3.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.codehaus.groovy:groovy-bom:3.0.13')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
        spock23groovy40(JvmTestSuite) {
            useSpock('2.3-groovy-4.0')
            sources(testSources)
            dependencies {
                implementation project.dependencies.enforcedPlatform(project(':dependencies'))
                implementation project.dependencies.enforcedPlatform('org.apache.groovy:groovy-bom:4.0.6')
                implementation project.dependencies.project(path: ':spock-mockable', configuration: 'shadow')
                implementation 'net.bytebuddy:byte-buddy'
                implementation 'org.objenesis:objenesis'
                implementation 'org.slf4j:slf4j-simple'
            }
        }
    }
}

tasks.named('check') {
    dependsOn testing.suites
//    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}

tasks.withType(Test) {
    forkEvery 1
    jvmArgs([
            "-javaagent:${classpath.find { it.name.contains('spock-mockable') }.absolutePath}",
//          '-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5006,suspend=y',
    ])
}

tasks.withType(GroovyCompile) {
//    groovyOptions.fork = true
//    groovyOptions.forkOptions.jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=n,address=5005,suspend=y']
}

test {
    finalizedBy jacocoTestReport

    useJUnitPlatform()
    jacoco {
        enabled = false
        includes = ['io.github.joke.spockmockable.agent.**',
                    'io.github.joke.spockmockable.hooks.**']
        includeNoLocationClasses = true
        dumpOnExit = true
        classDumpDir = layout.buildDirectory.dir('jacoco/dumps').get().asFile
    }
    jvmArgs([
            "${jacoco.asJvmArg}",
            "-javaagent:${classpath.find { it.name.contains('spock-mockable') }.absolutePath}",
//            '-agentlib:jdwp=transport=dt_socket,server=n,address=localhost:5006,suspend=y',
    ])
}

jacocoTestReport {
    dependsOn test
    classDirectories.setFrom([])
    additionalSourceDirs project(':spock-mockable').sourceSets.main.java.sourceDirectories.singleFile
    additionalClassDirs layout.buildDirectory.dir('jacoco/dumps').get().asFile
}
