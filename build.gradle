plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2' apply false
    id 'idea'
    id 'net.ltgt.errorprone' version '3.0.1' apply false
    id 'org.shipkit.shipkit-auto-version' version '1.2.2'
    id 'io.freefair.lombok' version '6.5.1'
}

allprojects { project ->
    group 'io.github.joke'
    description 'make classess more mockable'
    version rootProject.version

    repositories {
        mavenCentral()
    }

    plugins.withType(JavaBasePlugin) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    pluginManager.withPlugin('base') {
        tasks.withType(JavaCompile) {
            options.release = 8
            options.compilerArgs << '-parameters' << '-Werror'
        }
    }

    pluginManager.withPlugin('jacoco') {
        test.finalizedBy jacocoTestReport
        jacocoTestReport {
            dependsOn test
            reports {
                xml.required = true
            }
        }
    }

    pluginManager.withPlugin('lombok') {
        lombok {
            version = '1.18.24'
        }
    }

    pluginManager.withPlugin('net.ltgt.errorprone') {
        tasks.withType(JavaCompile) {
            options.errorprone {
                disableWarningsInGeneratedCode = true
                error('NullAway')
                option('NullAway:AnnotatedPackages', project.group)
            }
        }
    }

    tasks.withType(AbstractArchiveTask) {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }

    pluginManager.withPlugin('maven-publish') {
        project.plugins.apply 'signing'

        pluginManager.withPlugin('java') {
            java {
                withJavadocJar()
                withSourcesJar()
            }
        }

        pluginManager.withPlugin('signing') {
            afterEvaluate {
                signing {
                    required {
                        gradle.taskGraph.hasTask('publish')
                    }
                    useGpgCmd()
                    sign publishing.publications
                }
            }

            tasks.withType(AbstractPublishToMaven)*.mustRunAfter('check')
        }

        publishing {
            repositories {
                maven {
                    name = 'OSSRH'
                    url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    credentials(PasswordCredentials)
                }
                maven {
                    name = 'GitHubPackages'
                    url = uri("https://maven.pkg.github.com/joke/${project.name}")
                    credentials(PasswordCredentials)
                }
            }
            afterEvaluate {
                tasks.withType(AbstractPublishToMaven)*.dependsOn(check)
                publications.each { publication ->
                    publication.pom {
                        name = project.name
                        description = project.description
                        url = "https://github.com/joke/${project.name}"
                        licenses {
                            license {
                                name = 'Apache License, Version 2.0'
                                url = 'https://www.apache.org/licenses/LICENSE-2.0'
                            }
                        }
                        developers {
                            developer {
                                id = 'joke'
                                name = 'Joke de Buhr'
                                email = 'joke@seiken.de'
                            }
                        }
                        scm {
                            connection = "scm:git:git://github.com/joke/${project.name}.git"
                            developerConnection = "scm:git:git://github.com/joke/${project.name}.git"
                            url = "http://github.com/joke/${project.name}/tree/master"
                        }
                    }
                }
            }
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = '7.5.1'
}
